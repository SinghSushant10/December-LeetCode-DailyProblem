#2415. Reverse Odd Levels of Binary Tree

TC: O(n)+(n/2) SC:O(n)

class Solution {
    public TreeNode reverseOddLevels(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        int level=0; 
        queue.offer(root);
        while(!queue.isEmpty()){
            int size=queue.size();
            ArrayList<TreeNode> list = new ArrayList<>();
            for(int i=0; i<size;i++){
                TreeNode node = queue.poll();
     // Add left and right children to the queue for the next level
                if(node.left !=null){
                    queue.offer(node.left);
                }
                if(node.right!=null){
                    queue.offer(node.right);
                }
      // If the level is odd, add the node to the list
                if(level%2!=0){
                    list.add(node);
                }
            }

  // If the current level is odd, reverse the node values in the list
            if(level%2!=0){
                int i=0;
                int j = list.size()-1;
                while(i<j){
                    int temp = list.get(i).val;
                    list.get(i).val = list.get(j).val;
                    list.get(j).val = temp;
                    i++;
                    j--;
                }
            }
            level++;
        }
        return root;

    }
}
