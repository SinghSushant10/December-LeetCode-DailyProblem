#1346. Check If N and Its Double Exist

TC:O(n) SC:O(n)
class Solution {
    public boolean checkIfExist(int[] arr) {
      HashSet<Integer> set  = new HashSet<>();
      for(int element :arr){
        if(set.contains(element*2) || (element%2==0 && set.contains(element/2))){
            return true;
        }
        set.add(element);     // Add the current element to the set
      }
       return false;
    }
}



TC:O(n^2) SC:O(1)
//Brute Force
    // int n = arr.length;

    //     // Iterate over each pair (i, j)
    //     for (int i = 0; i < n; i++) {
    //         for (int j = 0; j < n; j++) {
    //             // If i != j and arr[i] is 2 times arr[j]
    //             if (i != j && arr[i] == 2 * arr[j]) {
    //                 return true;
    //             }
    //         }
    //     }

    //     return false;
